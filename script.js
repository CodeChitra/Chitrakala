//!Our API Key generated by TMDB 
const API_KEY = 'api_key=a17c5a8cc9908b880efecf89037b7283';
//!This is the base url that is always required whenever we are making the request to the API
const BASE_URL = 'https://api.themoviedb.org/3'

//! Our API URL is consist of three things---> base url + the main url what exactly we are fetching + API Key
const API_URL = BASE_URL + '/discover/movie?sort_by=popularity.desc&' + API_KEY;
// const API_URL = BASE_URL + '/discover/movie?primary_release_date.gte=2014-09-15&primary_release_date.lte=2014-10-22&' + API_KEY;

//!TMDB API returns the image path of movie which is required to be concatinated with this url
const IMAGE_URl = 'https://image.tmdb.org/t/p/w500';

//! This is how we search any thing from this api and at the end of it we add query parameteres
const SEARCH_URL = BASE_URL + '/search/movie?' + API_KEY

// Targetting some DOM Element

//Main in which movies are showing
const main = document.getElementById('main');

//Search Bar Form
const form = document.getElementById('form')
const search = document.getElementById('search');

//Title of the website
const title = document.getElementById('title');

//Container in which all category tags are showing
const tagsElem = document.getElementById('tags');

//Geners takesn from the TMDB API and stored as a array of objects
const generes = [
    {
        "id": 28,
        "name": "Action"
    },
    {
        "id": 12,
        "name": "Adventure"
    },
    {
        "id": 16,
        "name": "Animation"
    },
    {
        "id": 35,
        "name": "Comedy"
    },
    {
        "id": 80,
        "name": "Crime"
    },
    {
        "id": 99,
        "name": "Documentary"
    },
    {
        "id": 18,
        "name": "Drama"
    },
    {
        "id": 10751,
        "name": "Family"
    },
    {
        "id": 14,
        "name": "Fantasy"
    },
    {
        "id": 36,
        "name": "History"
    },
    {
        "id": 27,
        "name": "Horror"
    },
    {
        "id": 10402,
        "name": "Music"
    },
    {
        "id": 9648,
        "name": "Mystery"
    },
    {
        "id": 10749,
        "name": "Romance"
    },
    {
        "id": 878,
        "name": "Science Fiction"
    },
    {
        "id": 10770,
        "name": "TV Movie"
    },
    {
        "id": 53,
        "name": "Thriller"
    },
    {
        "id": 10752,
        "name": "War"
    },
    {
        "id": 37,
        "name": "Western"
    }
]

//Previous Page button
const prev = document.getElementById('prev')

//Next Page Button
const next = document.getElementById('next')

//Current Page Button
const current = document.getElementById('current')

//Pagination required Variables
var currentPage = 1;
var nextPage = 2;
var prevPage = 3;
var totalPages = 100;
var lastUrl = ""

//Array variables that is storing and removing the id's of categories according to selected or deselected
var selectedGenre = []

//Setting the genre by this funtion
setGenre()
function setGenre() {
    tagsElem.innerHTML = "";
    generes.forEach((genre) => {
        //Creating a new category tag element
        const gElem = document.createElement('div');
        gElem.classList.add('tag');
        gElem.id = genre.id;
        gElem.innerText = genre.name;
        gElem.addEventListener('click', () => {
            if (selectedGenre.length == 0) {
                selectedGenre.push(genre.id);
            }
            else {
                if (selectedGenre.includes(genre.id)) {
                    selectedGenre.forEach((id, idx) => {
                        selectedGenre.splice(idx, 1);
                    })
                }
                else {
                    selectedGenre.push(genre.id);
                }
            }

            //Here we are getMovies funtion passing the url where we are adding genere query parameteres at the end of the API_URL
            getMovies(API_URL + "&with_genres=" + encodeURI(selectedGenre.join(",")))

            //This funtion highlights the selected catogeries
            highlightColor();
        })
        //Now appending each element in tagsElem container ---- category tags container
        tagsElem.append(gElem)
    })
}

//Tags highlited when clicked and active and removed when not active
function highlightColor() {
    //By default we are removing highlight class, we are adding this class only when they are present in selectedGenre array
    const tags = document.querySelectorAll(".tag");
    tags.forEach(tag => {
        tag.classList.remove("highlight");
    });

    //whenever our highlight function is called we are calling this clear function to add clear button
    clearBtn()
    if (selectedGenre != 0) {
        selectedGenre.forEach((id) => {
            const elem = document.getElementById(id)
            elem.classList.add("highlight");
        })
    }
}


//Clear Category Button 
function clearBtn() {
    const getClear = document.getElementById('clear')
    if (getClear) {
        getClear.classList.add("highlight");
    }
    else {
        const clear = document.createElement('div')
        clear.classList.add('tag', 'highlight');
        clear.id = "clear"
        clear.innerText = "Clear X";
        clear.addEventListener("click", () => {
            selectedGenre = [];
            highlightColor();
            setGenre();
            getMovies(API_URL)
        })
        tagsElem.append(clear);
    }

}

//!Here we have created a function which is fetching the json data using fetch api and after it calling the showData funtion
getMovies(API_URL)
function getMovies(url) {
    lastUrl = url
    fetch(url).then(res => res.json()).then(data => {
        console.log(data.results)
        if (data.results != 0) {
            currentPage = data.page;
            nextPage = currentPage + 1;
            prevPage = currentPage - 1;
            totalPages = data.total_pages;

            current.innerText = currentPage;
            if (currentPage <= 1) {
                prev.classList.add('disabled')
                next.classList.remove('disabled')
            }
            else if (currentPage > 1) {
                // next.classList.add('disabled')
                prev.classList.remove('disabled')
            }
            else {
                next.classList.add('disabled')
                prev.classList.add('disabled')
            }
            //Every time the page is reloaded by default the page automaticalyy the page would be scrolled to the category tags
            tagsElem.scrollIntoView({ behavior: "smooth" })
            showMovies(data.results);
        }
        else {
            main.innerHTML = "<h1>No results found!</h1>"
        }
    })
}


function showMovies(data) {
    main.innerHTML = ""
    data.forEach(movie => {
        const { title, poster_path, vote_average, overview, id } = movie
        const movieEl = document.createElement('div');
        movieEl.classList.add('movie');
        movieEl.innerHTML = `
        <img
                src="${IMAGE_URl + poster_path}" alt = "${title}">

            <div class="movie_info">
                <h3>${title}</h3>
                <span class="${getColor(vote_average)}">${vote_average}</span>
            </div>

            <div class="overview">
                <h3>Overview</h3>
                ${overview}
                <br>
                <button id="${id}" class="know-more">Know More</button>
            </div>
    
        `

        main.appendChild(movieEl);
        document.getElementById(id).addEventListener('click', () => {
            console.log(id);
            openNav(movie);
        })
    });
}
const overlayContent = document.getElementById("overlayContent")
function openNav(movie) {
    let id = movie.id;
    fetch(BASE_URL + '/movie/' + id + '/videos?' + API_KEY).then(res => res.json()).then(videoData => {
        console.log(videoData);
        if (videoData) {
            document.getElementById("myNav").style.width = "100%";
            if (videoData.results.length > 0) {
                var embed = [];
                videoData.results.forEach(video => {
                    let { name, key, site } = video;
                    if (site == 'YouTube') {
                        if (name.includes("Trailer")) {
                            embed.push(`
                        
                        <iframe width="560" height="315" src="https://www.youtube.com/embed/${key}" title="${name}" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture" allowfullscreen class="responsive-iframe"></iframe>
                        `
                            )
                        }
                        else {
                            overlayContent.innerHTML = `<h1 class ="no-result">No Trailer Found</h1>`;
                        }

                    }
                })

                overlayContent.innerHTML = embed.join("");
            }
            else {
                overlayContent.innerHTML = `<h1 class ="no-result">No Result Found</h1>`;
            }
        }
    })

}

/* Close when someone clicks on the "x" symbol inside the overlay */
function closeNav() {
    document.getElementById("myNav").style.width = "0%";
}

//Color according to movierating
function getColor(vote) {
    if (vote >= 8)
        return 'green';
    else if (vote >= 5)
        return 'yellow';
    else
        return 'red';
}

//Search Functionality
form.addEventListener('submit', (e) => {
    e.preventDefault()
    selectedGenre = [];
    highlightColor();
    setGenre();
    const searchTerm = search.value;
    if (searchTerm) {
        getMovies(SEARCH_URL + '&query=' + searchTerm)
    }
    else {
        getMovies(API_URL);
    }
})

//Go to home by clicking on the title of the website
title.addEventListener('click', () => {
    getMovies(API_URL);
})


//Previous page button where we are calling a funtion pageCall and passing the prevPage value if previous page available
prev.addEventListener('click', () => {
    if (prevPage > 0) {
        pageCall(prevPage)
    }
})

//Next page button where we are calling a funtion pageCall and passing the prevPage value if next page available
next.addEventListener('click', () => {
    if (nextPage < totalPages) {
        pageCall(nextPage)
        console.log("Clicked on next")
    }
})


function pageCall(page) {

    // Here we are splitting our current active url by ?, it will be splitted into array of length two
    let urlSplit = lastUrl.split("?");
    //Now againg splitting the secind element of urlSplit by &, length is now fixed but we want to get the last element 
    let queryParams = urlSplit[1].split("&");

    //Here we are splitting the last element of queryParams by =, so that we get to know whether page paramter is aaded at the last of url or not
    let key = queryParams[queryParams.length - 1].split("=")

    //Here we are checking whether page paramter is added or not 
    if (key[0] != 'page') {
        //If page parameter is not added then we simply add it to the last of the url
        let url = lastUrl + "&page=" + page;
        getMovies(url);
    }
    else {
        //If page paramter is added now we have to change the page paramter value to change the page 
        key[1] = page.toString();

        //Niw combining the page parameter and value
        let a = key.join("=");

        //And adding it to the last of the url using &
        let url = lastUrl + "&" + a;
        getMovies(url);
    }
}